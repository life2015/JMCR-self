# Scheduling strategy that defines how interleavings will be searched
# default is MCR, other choices include:
# edu.tamu.aser.scheduling.strategy.RVPORStrategy &&
#mcr.exploration.scheduling.strategy = edu.tamu.aser.scheduling.strategy.RVPORStrategy
#mcr.exploration.scheduling.strategy = edu.tamu.aser.scheduling.strategy.IterativeContextBoundingStrategy
mcr.exploration.scheduling.strategy = edu.tamu.aser.scheduling.strategy.MCRStrategy

#mcr.exploration.randomseed = 100

# Specifies choices to reproduce a single buggy schedule
mcr.exploration.reprochoices = 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2

#mcr.exploration.debug=true

mcr.exploration.preemptionbound = 2

mcr.exploration.stoponfirsterror = true

# A package specified as a.b will have the effect of ignoring a.b.*
mcr.instrumentation.packages.ignore.prefixes = \
  edu.tamu; \
  jdk.internal.org.objectweb.asm; \
  org.w3c.www; \
  com.sun; \
  com.google.; \
  com.beust; \
  com.jclark; \
  com.intellij; \
  java; \
  javax; \
  junit; \
  org.hamcrest; \
  org.junit; \
  org.objectweb.asm; \
  org.apache.log4j; \
  sun; \
  sunw; \
  org.eclipse.jdt.internal.junit4; \
  org.eclipse.jdt.internal.junit; \
  edu.tamu.aser; \
  rvpredict; \
  edu.tamu.aser.rvinstrumentation; \
  org.apache.commons.cli; \
  org.w3c; \
  org.eclipse; \
  org.xml; \
  org.w3c.util.CachedThread; \
  edu.illinois.imunit; \
  org.w3c.tools.sexpr; \
  org.apache.xerces; \
  org.slf4j;\
  org.java_websocket;\
  kotlin;\
  jdk;\
  com.retrox


# memory model
mm = SC

# static dependency analysis
dep_mcr = false
plus = false

# optimal mcr
opt_mcr = false

# debug
debug = false

# A package specified as a.b will have the effect of ignoring only a.b
mcr.instrumentation.packages.ignore = 

# A class specified as a.b.Class will have the effect of ignoring a.b.Class*
# java.lang.reflect automatically generates $Proxy# classes in default package
mcr.instrumentation.classes.ignore.prefixes = \
  $Proxy

# A class specified as a.b.Class will have the effect of ignoring only a.b.Class
mcr.instrumentation.classes.ignore = 
# ; \java.util.concurrent.ThreadPoolExecutor


# A package specified as a.b will have the effect of allowing a.b.*, with precedence over ignorance
mcr.instrumentation.packages.allow.prefixes = \
  edu.tamu.aser.testInstrumentation; \
  edu.tamu.aser.results; \
  edu.tamu.aser.rvtest; \
  edu.tamu.aser.rvtest_simple_tests; \
  edu.tamu.aser.testOMCR; \
  edu.tamu.aser.testStaticDependency; \
  edu.tamu.aser.testPSO; \
  edu.tamu.aser.testTSO; \
  edu.tamu.aser.results.mutual_exclusion

# A package specified as a.b will have the effect of allowing a.b, with precedence over ignorance
mcr.instrumentation.packages.allow =

#  java.util.concurrent.locks; \
#  java.util.concurrent

# A class specified as a.b.Class will have the effect of allowing a.b.Class*, with precedence over ignorance
mcr.instrumentation.classes.allow.prefixes = 

# A class specified as a.b.Class will have the effect of allowing a.b.Class, with precedence over ignorance
mcr.instrumentation.classes.allow =

# Listeners
mcr.exploration.listeners = edu.tamu.aser.listeners.PaperStatsListener